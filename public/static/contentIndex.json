{"A-Comparison-of-Six-Forest-Mapping-Products-in-Southeast-Asia":{"title":"A Comparison of Six Forest Mapping Products in Southeast Asia","links":["attachment/Forest-Mapping-Comparison.pdf","Finer-Resolution-Observation-and-Monitoring-Global-LC","ESA-WorldCover-2020","ESRI-2020-Land-Cover","Global-PALSAR-2-Forest-Non-Forest","Global-Surface-Temperature-Change"],"tags":[],"content":"Forest Mapping Comparison.pdf\nIntroduction §\nForest mapping products utilized for monitor and assess the status and changes in forests. However, substantial disparities exist among these products due to variations in forest definitions, classification methods, and data source.\nLand cover products that include forest (10m resolution):\n\nFROM-GLC10 - Finer Resolution Observation and Monitoring Global LC\nESA2020 - ESA WorldCover 2020\nESRI2020 - ESRI 2020 Land Cover\n\nForest thematic mapping (20-30m resolution):\n\nJAXA FNF2020 - Global PALSAR-2 Forest Non-Forest\nGFC30_2020 - Global 30m Spatial Distribution of Forest Cover in 2020\nHansen2010 - Global Surface Temperature Change\n\nSoutheast Asia is home to approximately 15% of the world’s tropical forests. Southeast Asia is recognized as one of the significant hotspots for tropical forest logging and forest degradation.\nData §\nStudy area: Cambodia, Indonesia, Laos, Malaysia, Myanmar, Philippines, Thailand, and Vietnam.\nResult §\nHighest overall accuracy for forest:\n\nESRI2020\nESA2020\nFROM-GLC10\nGenerated_Hansen202\n\nRegions with elevations ranging from 200 to 3000 m and slopes below 15◦ or above 25◦ showed high spatial consistency, whereas other regions showed low consistency.\nInconsistent regions showed complex landscapes heavily influenced by human activities; these regions are prone to being confused with shrubs and cropland and are also impacted by rubber and oil palm plantations, significantly affecting the accuracy of forest mapping.\nAreas of forest inconsistency that require attention in future forest mapping."},"Challenges-on-land-cover-change-detection":{"title":"Challenges on land cover change detection","links":["Landsat","Phenology-and-sun-angle-differences-in-landsat-data"],"tags":[],"content":"Previous research:\n\nClouds could reduce the amount of usable data. It’s hard to find an ideal pair of Landsat images that are free of clouds, cloud shadows and snow\nPrevious change detection algorithm over shorter time intervals has a limitations. To minimize the influences of Phenology and sun angle differences in landsat data, the ideal images should fall within the same season\n"},"Continuous-Change-Detection-and-Classification":{"title":"Continuous Change Detection and Classification","links":["Landsat","Google-Earth-Engine","Land-Cover-Change","Root-Mean-Squared-Error","Random-Forest-Classifier","Impact-of-Land-Cover-on-Environmental-Processes","Natural-and-Anthropogenic-Land-Cover-Change","Challenges-on-land-cover-change-detection","Fmask","Robust-Iteratively-Reweighted-Least-Squares","Ordinary-Least-Squares"],"tags":[],"content":"It’s an algorithm used in remote sensing area for land cover analysis. The original methods published form paper titled “Continuous change detection and classification of land cover using all available Landsat data”, published in 11 February 2014. Now it’s implementation are available on Google Earth Engine.\n\nAbstract §\n\nDetecting many kinds of Land Cover Change continuously as new images are collected, and providing land cover maps for any given time.\nEliminating “noisy” observation by using masking algorithm. A two-step cloud, cloud shadow, and snow masking algorithm is used.\nTime series model. It has components of seasonality, trend, and break. Estimates surface reflectance and brightness temperature. The model is updated dynamically with newly acquired observations.\nCCDC algorithm use threshold derived from 7 Landsat bands due to differences in spectral response for various kinds of Land Cover Change.\nLand surface change is detected when the difference between observed and predicted images exceeds a threshold three consecutive times, than a pixel is identified as land surface change.\nLand cover classification is done after change detection. Coefficient from the time series model and the Root Mean Squared Error from model estimation are used as input to the Random Forest Classifier.\nThe CCDC algorithm is applied to one Landsat scene in New England (WRS Path 12 and Row 31). All available (a total of 519) Landsat images acquired between 1982 and 2011 were used\nCCDC results were accurate for detecting land surface change, with producer’s accuracy of 98% and user’s accuracies of 86% in spatial domain and temporal accuracy of 80%. The land cover map with 16 categories had an overall accuracy of 90%.\n\nKeywords: CCDC, Classification, Change detection, Time series, Land cover, Continuous, Landsat, Random Forest.\n\nIntroduction §\nMonitoring land cover change with remote sensing §\nReading:\n\nImpact of Land Cover on Environmental Processes\nNatural and Anthropogenic Land Cover Change\nChallenges on land cover change detection\n\nLand cover classification §\nMultitemporal images improve classification accuracy, especially for vegetation because of the unique phenological characteristics of different vegetation types. The problem is they need all dates of images to be free of clouds which often not possible.\nWe typically assume no land cover change in the time interval between the different images. This assumption is not always valid, especially when images from long time intervals are used.\nRemote sensing community needs a classification algorithm that:\n\nIncreases the time period over which land cover maps remain “current”.\nWorks for areas where multiple kinds of land cover change is common.\nMakes land cover maps comparable between times for identification of change.\n\nData §\nStudy area is located in coastal New England, United States. It includes a wide variety of environments and land covers including; extensive urbanization, abandonment of agricultural fields, and forest clearing. And it’s rare to find a cloud-free Landsat image in this area, making it an outstanding place to test the robustness of this new algorithm.\n\nMethods §\nImage Preprocessing §\nAtmosphere Correction §\nAtmospheric correction is performed using the Landsat Ecosystem Disturbance Adaptive Processing System (LEDAPS) atmospheric correction tool.\nScreening of cloud, cloud shadow, and snow §\nInitially masked using object-based algorithm called Fmask.\nSecond step cloud preprocessing §\nFurther screening outliers missed by the Fmask algorithm based on multitemporal analysis. This approach first estimate the time series model on “clear” observations and then detect outliers by comparing model estimates and Landsat observations.\nThe Robust Iteratively Reweighted Least Squares method is used for estimating the time series model. This method reduces the influence of ephemeral changes, or pixel affected by clouds, shadows, or snow that were not identified by Fmask.\nThe time series model estimates for Band 2 and 5 because clouds and snow make Band 2 brighter, also cloud shadows and snow make Band 5 darker. By comparing actual Landsat observations and the corresponding model predictions, it is comparatively easy to identify any remaining clouds, cloud shadows, snow, and other ephemeral changes.\n\nThe observations that identified as an outlier is removed from further analysis.\n\nThe model estimation starts when there are a total of 15 “clear” (determined by Fmask) observations. The first 12 are compared between observed and model predicted values to decide whether there are outliers.\nExamples\n\n\n                  \n                  Snow and cloud make Band 2 more brighter (Figure A &amp; B) \n                  \n                \n\n\n\n\n                  \n                  Cloud shadows and snow make Band 5 darker (Figure C &amp; D) \n                  \n                \n\n\nThose labeled cloud, cloud shadows and snow are determined by the multitemporal analysis. CCDC algorithm only applies multitemporal detection during the time of model initialization. For observations acquired after model initialization, only Fmask algorithm is used.\nCCDC Time Series Model §\nLand surface change devided into 3 categories; Intra-annual change, Gradual inter-annual change,\n\n\n                  \n                  Intra-annual change (Seasonality) \n                  \n                \nCaused by vegetation phenology driven by seasonal patterns of environmental factors like temperature and precipitation\n\n\n\n\n                  \n                  Gradual-annual change (Trend) \n                  \n                \nCaused by climate variability, vegetation growth or gradual change in land management or land degradation\n\n\n\n\n                  \n                  Abrupt change (Break) \n                  \n                \nCaused by deforestation, floods, fire, insects or urbanization.\n\n\nTherefore, the time series model has component’s of seasonality, trend, and breaks that captures all 3 categories surface change. The model coefficients are estimated using Ordinary Least Squares based on the remaining clear Landsat observations. Ordinary Least Squares is used instead of Robust Iteratively Reweighted Least Squares because it’s faster and more accurate when all the significance outliers have been excluded.\nContinuous Change Detection §\n\nTo detect forest change, a single change index with a fixed threshold is sufficient. The thresholds are generated through the original observations and model estimation which are done separately for each individual pixel.\nRoot Mean Squared Error is computed for each spectral band. The difference between observations and model predictions for each band is normalized by three times the Root Mean Squared Error. We use three times the Root Mean Squared Error due to the fact that the spectral signals usually deviate from model prediction by more than three times.\n\n\n\n                  \n                  Detect change (Band 5 for illustration) \n                  \n                \nFig. 6A shows the model prediction and three times the RMSE before change occurred.\nFig. 6B shows the model prediction and three times the RMSE when change occurred.\nFig. 6C shows the model prediction and three times the RMSE after change occurred.\n\n\nDetecting Changes §\nSeven spectral bands are used to detect change. CCDC algorithm averages the difference between observations and model predictions that have been normalized by three times the RMSE for all seven Landsat bands, and if the result is larger than 1 for three consecutive clear observations, a change is identified. Otherwise, if the values for only one or two consecutive observations are larger than 1, it will be regarded as an ephemeral change and the observations will be flagged as outliers.\nModel Initialization §\nLand cover change that occurs within the time of model initialization (start of the model estimation) can bias the time series model predictions. Therefore, if there is land cover change during the process of model initialization, the CCDC algorithm will remove the first clear observation and add one more clear observation and this process will continue until no possible change is detected within the initialization time period.\nFor pixels of stable land cover, the magnitude of the slope of the time series model will be relatively small. If land cover change occurs during the time of model initialization (tmodel​), the observation will usually deviate more than three times the RMSE, making the slope of the time series model larger than 3 × RMSEi/tmodel​.\n3 approaches to detect change; abnormal slope, abnormal first observations, abnormal last observations.\n\nIf the average value of the normalized slope for all bands is larger than 1, it will be detected as an abnormal slope, indicating a possible change within the model initialization time.\nif land cover change occurs at the start or the end of model initialization, there may not be enough observations affected by the land cover change to significantly influence the magnitude of the slope, but they may still influence model estimation. The difference between observed and predicted values for each Landsat band is normalized by RMSEi , and if the average value of the normalized difference for all Landsat bands is larger than 1 for the first or the last observation, it will be identified as an abnormal observation.\n\nContinuous Land Cover Classification §\n\nIt will be more beneficial if we know the land cover categories before and after change\n\nCCDC algorithm uses the coefficients of time series models as the inputs for land cover classification. After the change detection process, each pixel will have its own time series models before and after any changes. By classifying the time series model coefficients, this algorithm can provide a land cover type for the entire time period for each time series model.\n\nDifferent land cover classes will have different shapes for the estimated time series models.\n\n\n\n                  \n                  Different estimated time series models for 4 difference kinds of land cover change \n                  \n                \nThe gaps in the middle between 2 classification is classified as “disturbed”\nFig 8A: The time series models show completely different shapes, especially for Band 4 and Band 6. Forest reflects strongly in Band 4. The increase in Band 6 is mostly due to reduced evapotranspiration and urban heat island effects when forest is converted to developed.\nFig 8B: The most significant changes are observed in Band 5 and Band 7, as forest is usually low in SWIR bands but barren always has high reflectance in these spectral bands.\nFig 8C: There is not much difference in the time series models in the visible bands, but the SWIR and thermal bands are quite different.\nFig 8D: The time series models of the NIR and SWIR bands show the biggest difference.\n\n\nMethod Summarize §\n\nGiven a point (lon, lat)\nGet Landsat data\nAtmospheric correction\nFmask screening cloud, cloud shadow, snow\nMultitemporal analysis -&gt; Detect outlier\nRobust Iteratively Reweighted Least Squares estimates models, reducing pixel affected by clouds, shadows, or snow\nThe observations that identified as an outlier is removed from further analysis\n\n\nDiscussion §\nHow fast the CCDC algorithm is able to find change and its corresponding land cover type, is primarily dependent on the frequency of available clear observations. This algorithm will improve as the frequency of images from sensors like Landsat increases.\nCommission error appears because of the following reasons:\n\nPartially changed pixels\nChange occurs too early\n\n\nQuestions §\n\nTwo-step cloud and cloud shadow masking algorithm\nDifference in Landsat bands spectral response\nTemporal accuracy, producer’s and user’s accuracy\nTemporal vs multitemporal images\n\nNotes §\nPaper limitation:\n\nThis study is a “prototype” for continuous change detection and classification using all available Landsat data. Testing this approach for other regions with different environments will be a future research direction.\n\nReading:\n\nRobust Iteratively Reweighted Least Squares\nFmask\n"},"ESA-WorldCover-2020":{"title":"ESA WorldCover 2020","links":[],"tags":[],"content":"It is a collaborative effort between the European Space Agency (ESA) and multiple research institutions worldwide, utilizing imagery from Sentinel-1 and Sentinel-2.\nThe forest class is coded as 10 and is defined as areas where tree cover is more than 10%.\nThis land cover includes classes below the canopy, like shrubs, built-up areas, and plantations, like oil palm and olive trees. It also includes tree-covered areas with seasonally or permanently flooded with freshwater, except for mangroves.\nThe product assesses accuracy through statistical verification, map visual comparison, and spatial accuracy verification.\nMore than 200,000 reference points were used in the map visual comparison to evaluate its accuracy and assess its spatial uncertainty. Its overall accuracy was determined to be 74.4%."},"ESRI-2020-Land-Cover":{"title":"ESRI 2020 Land Cover","links":["Sentinel-2"],"tags":[],"content":"It was developed using Sentinel-2 imagery with a 10 m resolution and deep learning methods.\nThe forest class is coded as 2 and defined as dense vegetation clustering of trees taller than 15 m, typically with a closed or dense canopy. This class includes various types of vegetation, such as wooded vegetation and clusters of dense tall vegetation within savannas, plantations, swamps, and mangroves.\nThe model utilized over 5 billion Sentinel-2 pixels, manually annotated from more than 20,000 sampling points distributed worldwide. By processing images captured on multiple dates throughout the year, the model generated a representative map. The overall accuracy is reported to be 85%."},"Finer-Resolution-Observation-and-Monitoring-Global-LC":{"title":"Finer Resolution Observation and Monitoring Global LC","links":[],"tags":[],"content":"Global land cover product created by Gong Peng et al., from Tsinghua University, in 2017.\nBased on 10 m resolution Sentinel-2 imagery and was produced using a random forest classifier.\nThe forest class is coded as 20 and is defined as areas with trees higher than 3 m and tree cover of more than 15%.\n300,000 training samples of various sizes from around 93,000 sample points worldwide.\nThe validation set consists of approximately 140,000 samples from different seasons, covering 38,000 sample points.\nThe overall accuracy of the product is 72.76%, with a user’s accuracy for the forest class of about 83.47%."},"Global-PALSAR-2-Forest-Non-Forest":{"title":"Global PALSAR-2 Forest Non-Forest","links":[],"tags":[],"content":"It was developed by the Japan Aerospace Exploration Agency (JAXA) using L-band synthetic aperture radar sensors on the Advanced Land Observing Satellite-2 (ALOS-2 PALSAR-2) and Advanced Land Observing Satellite (ALOS PALSAR).\nIt was generated through random forest, utilizing variances in the backscattering coefficients among different land cover classes in diverse ecological regions.\nThe product has a spatial resolution of 25 m. Forests are defined as land spanning more than 0.5 hectares with trees higher than 5 m and a canopy cover of more than 10%.\nThis includes forested areas that have not yet reached but are expected to reach the criteria, as well as forest roads, firebreaks, and other small open areas.\nIt includes rubberwood, cork oak, and Christmas tree plantations, but excludes plantations in agricultural production systems, such as oil palm plantations, fruit tree plantations, and olive grove orchards.\nThe accuracy was evaluated using ground photographs and high-resolution optical satellite images. The overall accuracy for three classes—forests, non-forests, and water—was higher than 86%."},"Global-Surface-Temperature-Change":{"title":"Global Surface Temperature Change","links":[],"tags":[],"content":"It is a collaborative effort between the Global Land Analysis and Discovery (GLAD) lab at the University of Maryland, Google, the United States Geological Survey (USGS), and the National Aeronautics and Space Administration (NASA).\nTree cover is defined as all vegetation taller than 5 m, including both natural forests and planted forests that meet the criteria.\nThe spatial resolution is 30 m, and the tree cover is represented as a percentage from 1% to 100%.\nThe data are derived from Landsat 7 reflectance measurements obtained during the growing season. Over 600,000 Landsat 7 images were analyzed using the Google Earth Engine (GEE) to accurately classify and supervise tree cover at the pixel level."},"Impact-of-Land-Cover-on-Environmental-Processes":{"title":"Impact of Land Cover on Environmental Processes","links":["Continuous-Change-Detection-and-Classification"],"tags":[],"content":"Land cover influence the energy balance, carbon budget, and. hydrological cycle as many different physical characteristics change as a function of land cover, such as albedo, emissivity, roughness, photosynthetic capacity and transpiration.\n\nLand Cover Types: Includes forests, grasslands, urban areas, etc.\nInfluence on Environmental Processes: Specifically affects energy balance, carbon budget, and hydrological cycle.\n\nExplanation:\n\nEnergy Balance:\n\nInfluence of Albedo: Different land covers have varying abilities to absorb and reflect sunlight and heat. E.g., forests have a lower albedo and absorb more heat compared to deserts.\nEmissivity Variations: Different surfaces emit heat at varied rates, affecting local and global temperatures.\n\n\nCarbon Budget:\n\nRole of Photosynthesis: Vegetation-rich areas absorb more CO2, impacting the atmospheric concentration of greenhouse gases.\nLand Cover and Carbon Storage: Different types of land cover store and release carbon differently, influencing global carbon levels.\n\n\nHydrological Cycle:\n\nTranspiration Effects: Areas with dense vegetation contribute to the water cycle through transpiration (release of water from plants).\nSurface Roughness and Water Movement: The physical texture of the land cover can influence evaporation rates and local climate patterns.\n\n\n\nRelevance and Importance:\n\nUnderstanding the impact of land cover on these processes is crucial for climate change studies, environmental management, and policy-making.\nThe interaction between land cover and these environmental processes is complex and multi-faceted, playing a critical role in global ecological balance.\n\nRelated §\nContinuous Change Detection and Classification"},"Interpreting-Time-Series-with-CCDC":{"title":"Interpreting Time Series with CCDC","links":[],"tags":[],"content":"GEE ability: access decades of imagery without the previous limitation of needing to download all the data to a local disk for processing\nChange Detection and Classification (CCDC) is a land change monitoring algorithm designed to operate on time series of satellite data.\nTheory §\nAdjacent observations are dependent: consecutive observations in a time series are not independent of each other, but rather each point is related to its preceding points.\nTemporal Segmentation §\nHow spectral change is detected? §\nSpectral change is detected at the pixel level by testing for structural breaks in a time series of reflectance. In Earth Engine, this process is referred to as “temporal segmentation,” as pixel-level time series are segmented according to periods of unique reflectance. It is done by fitting harmonic regression models to all spectral bands in the time series.\nHow the algorithm detect the changes? §\nThe model-fitting starts at the beginning of the time series and moves forward in time in an online approach to change detection. The coefficients are used to predict future observations, and if the residuals of future observations exceed a statistical threshold for numerous consecutive observations, then the algorithm flags that a change has occurred. After the change, a new regression model is fit and the process continues until the end of the time series.\nParameters §\nminObservations: number of consecutive observations required to flag a change\nchiSquareProbability and minNumOfYearsScaler default parameters of 0.99 and 1.33 respectively, control the sensitivity of the algorithm to detect change and the iterative curve fitting process required to detect change\nlambda and maxIteration parameters control the curve fitting process, higher maxIteration might take longer to complete\ntBreak: The time segment break date if a change is detected\nQuestions §\nWhat is harmonic regression models?\nIn EE temporal segmentation, the time series are segmented. Does the number of segments is predefined?\nNotes §\nWe can do a similar analysis for larger areas by first running the CCDC algorithm over a group of pixels.\nThe CCDC function in Earth Engine can take any ImageCollection. CCDC contains an internal cloud masking algorithm and is rather robust against missed clouds, but the cleaner the data the better.\nWe typically export the results to an Earth Engine asset first, and then inspect the asset. To avoid having issues such as taxing to the system very quickly, resulting in memory errors.\nExporting image to asset: larger tiles may take several hours to complete\nThe detection of a break does not always imply a change of land cover. Natural events, small-scale disturbances and seasonal cycles, among others, can result in the detection of a break by CCDC.\nA time series in Earth Engine is typically represented as an ImageCollection\nImageCollection characteristics:\n\nAt each pixel, there might be a distinct number of observations taken from a unique set of dates.\nThe size (length) of the time series can vary across pixels.\nData may be missing in any pixel at any point in the sequence (e.g., due to cloud masking).\n\nReference §\n\nNear Real Time monitoring of satellite image time-series: github\nGoogle Earth Engine Tutorials: web, github\nCCDC GUI: GEE App, [paper](# A Suite of Tools for Continuous Land Change Monitoring in Google Earth Engine)\ngee tutorial\n"},"Natural-and-Anthropogenic-Land-Cover-Change":{"title":"Natural and Anthropogenic Land Cover Change","links":[],"tags":[],"content":"\n\nDefinition: Land cover change refers to the transformation of the physical and biological cover of the earth’s surface.\n\n\nNatural Causes:\n\nClimate Change: Alterations in temperature and precipitation patterns can transform landscapes, such as turning forests into grasslands.\nNatural Disasters: Events like wildfires, floods, and volcanic eruptions can drastically alter land cover.\nEcological Succession: Natural processes where one type of ecosystem evolves into another over time.\n\n\n\nAnthropogenic Causes:\n\nUrbanization: Expansion of cities and towns leads to the conversion of natural landscapes into urban areas.\nAgriculture: Clearing forests and grasslands for farming changes land cover significantly.\nDeforestation: Driven by logging, agriculture, and urban expansion, it leads to the loss of forest cover.\nIndustrial Activities: Mining, construction, and other industrial activities transform landscapes.\n\n\n\nImplications:\n\nBiodiversity Loss: Changes in land cover can lead to habitat loss and a decline in wildlife populations.\nClimate Change: Land cover change, particularly deforestation, can contribute to global warming.\nWater Cycle Alteration: Changes in land cover can affect local and regional water cycles, impacting water availability.\n\n\n"},"Phenology-and-sun-angle-differences-in-landsat-data":{"title":"Phenology and sun angle differences in landsat data","links":[],"tags":[],"content":"\n\nPhenology: Refers to the study of cyclic and seasonal natural phenomena, especially in relation to climate and plant and animal life. In the context of Landsat data, phenology affects the imagery because different seasons show varying characteristics of vegetation, water bodies, and other land features. For instance, trees may be leafless in winter but fully leafed in summer, affecting the interpretation of satellite images.\n\n\nSun Angle Differences: This pertains to the varying positions of the sun at different times of the year. The sun angle influences the illumination and shadows in the imagery captured by Landsat satellites. A low sun angle can cause long shadows, while a high sun angle reduces shadows but may increase the glare. These variations can significantly affect the visual characteristics of the satellite imagery, impacting the analysis and interpretation of the data.\n\n\nImplications in Landsat Data Analysis:\n\nConsistency in Data Collection: For accurate change detection using Landsat images, it is crucial to minimize the effects of phenology and sun angle differences. Using images from the same season across different years helps in maintaining consistency, as it reduces variations caused by seasonal changes in vegetation and illumination.\nChallenges in Algorithm Development: Developing algorithms for change detection over short intervals is challenging due to these natural variations. Algorithms need to account for these factors to avoid misinterpreting natural seasonal changes as significant land cover changes.\n"},"SpectralGPT":{"title":"SpectralGPT","links":[],"tags":[],"content":"Key takeaway §\n\nUniversal remote sensing foundation model\nTrained on one million spectral remote sensing Sentinel-2 images\n3 models (Million Parameters): Base (100M), large, (300M) huge (600M)\n3D masking strategy, encoder for learning visual representation from spatial-spectral mixed tokens, decoder with multi-target reconstruction for preserving spectrally sequential characteristics\nMasked autoencoder (MAE) framework, masking rate 90%\nNew benchmark dataset SegMunich, focuses on urban areas\nPretrained: 700k data 12 spectral bands from fMoW-S2 200 epoch, 350k BigEarthNet Sentinel-2 100 epoch. 8 NVIDIA RTX 4090 GPUs for training, 4 gpus for finetuning\n\nDownstream task §\n\nsingle/multi-label scene classification: EuroSAT S2 images 10 land classes 13 bands 3k labeled images, 150 epochs\nsemantic segmentation\nchange detection\n\nPrev works §\n\nMomentum contrast (MoCo): Introduce momentum updates to improve contrastive learning process\nSimple contrastive learning (SimCLR): Leverages data augmentations to enhance the variety and complexity of the image pairs used for contrastive learning\nGenerative learning based on masked image modeling (MIM)\n\nExample, MIM architecture: Bidirectional encoder representation from image transformer (BEiT) built on top of vision transformers (ViT). Also MIM allows for flexible use of various deep architectures as network backbones (ViT, Swin Transformers)\nMIM allows input of all images patches, high computational cost, limited for certain application\nMIM alternative: Masked autoencoders (MAE), unmasked patcher or pixels used to reconstruct those that are masked. Computationally more efficient\n\n\nSatMAE: Pre-training transformers for temporal and multi-spectral satellite imagery\nfMoW-S2 dataset: Training from scratch 700k images, 3D tensor-based random weight initialization\nBigEarthNet-S2 dataset: Progressive pre training on 350k images, varying image sizes, resolution, time series information, and geographic regions. Fine tuning data 35k images with labels\n"},"Vim-Key-Bindings":{"title":"Vim Key Bindings","links":[],"tags":[],"content":"Vim is a highly customizable and efficient text editor that is popular among developers and power users. One of Vim’s standout features is its extensive set of keyboard shortcuts and commands, referred to as “key bindings.” Mastering these key bindings can greatly improve your productivity when editing files in Vim.\nWe will cover the most important and commonly used Vim key bindings to help you become a Vim ninja.\nBasic Navigation §\nThe most basic key bindings allow you to navigate through a document. Here are some of the main ones:\n\nh - Move left\nj - Move down\nk - Move up\nl - Move right\n\nYou can hold down the arrow keys for quicker continuous movement.\n\nCtrl + f - Page down\nCtrl + b - Page up\n0 (zero) - Move to beginning of line\n$ - Move to end of line\ngg - Go to beginning of file\nG - Go to end of file\n\nInsert Mode §\nTo enter Insert mode to start typing, press i. To exit back to Normal mode, press Esc.\nSome other useful Insert mode shortcuts:\n\ni - Insert before cursor\nI - Insert at beginning of line\na - Append after cursor\nA - Append to end of line\no - Open new line below\nO - Open new line above\n\nEditing Text §\nNow let’s look at some key bindings that allow you to edit text:\n\n\nx - Delete character\n\n\ndw - Delete word\n\n\ndd - Delete line\n\n\nd$ - Delete to end of line\n\n\nd0 - Delete to beginning of line\n\n\nc - Change/replace\n\n\ncw - Change current word\n\n\ncc - Change entire line\n\n\nu - Undo\n\n\nCtrl + r - Redo\n\n\ny - Yank/copy\n\n\nyy - Yank current line\n\n\np - Paste\n\n\n. - Repeat last command\n\n\nSearching §\nVim offers some handy search functionalities:\n\n/pattern - Search forward\n?pattern - Search backward\nn - Next match\nN - Previous match\n\nUse * to search for the word under cursor:\n\n* - Search forward for word under cursor\n# - Search backward\n\nExiting §\nTo save and quit:\n\n:w - Save file\n:wq - Save and quit\n:q! - Quit without saving\n\nVim’s key bindings allow you to edit text at the speed of thought. You now have a solid foundation of the most important and commonly used key bindings in Vim. Refer to this reference often as you continue to master this powerful editor. The more you practice using these shortcuts, the more efficient you will become editing files in Vim."},"index":{"title":"Welcome","links":["Continuous-Change-Detection-and-Classification"],"tags":[],"content":"Hi, I’m Azka 👋🏼 §\nThis is my digital garden built using Quartz.\nCurrently reading Continuous Change Detection and Classification paper."}}